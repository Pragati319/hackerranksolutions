// STACKS-----------------------------------------

import java.util.*;
import java.io.*;

class stack{
    List<Integer> list = new ArrayList<>();
    
    void push(int x){
        list.add(x);
    }
    int pop(){
      int rem =  list.remove(list.size()-1);
        return rem;
    }
    int peek(){
        return list.get(list.size()-1);
    }
    int Size(){
        return list.size();
    }
    List<Integer> display(){// not one of the  basic stack operations 
     return list;
    }
    
}
public class Main
{
	public static void main(String[] args) {
		System.out.println("Basic Stack implementation using List ");
		stack st = new stack();
		st.push(3);
		st.push(5);
		st.push(8);
		st.push(4);
		System.out.println("Popped item "+st.pop());
        st.peek();
		System.out.println(()"stack size "+st.Size);
		System.out.println("Stack Status "+st.display());


	}
}

// Using collections
public class Main
{
	public static void main(String[] args) {
		System.out.println("STACK USING collections hierarchy ");
		Stack stack = new Stack<>();
		
		//Adding elements to Stack
		
		stack.push(10);
		stack.push(90);
		stack.push("PUSH POP");
		stack.push(8);
		stack.pop();
		System.out.println(stack.peek());
		System.out.println(stack.size());
		System.out.println("At position :"+stack.search(90));

	}
}

//Balanced parenthesis  Problem 
import java.util.*;
public class Main
{
    public static boolean checkpair(char val1, char val2){
        return ((val1 =='(' && val2 == ')')||(val1 =='{' && val2 == '}')||(val1 =='[' && val2 == ']'));
    }
    public static boolean checkBalanced(String exp){
        Deque<Character> stack = new ArrayDeque<>();
        
        for(int i = 0; i< exp.length(); i++){
            
        if(exp.charAt(i) =='('|| exp.charAt(i)=='{'|| exp.charAt(i)=='[' ){
            stack.push(exp.charAt(i));
        }
        else {
            //char c1 = stack.peek();
            if(stack.isEmpty() )
            return false;
            else if (checkpair(stack.peek(),exp.charAt(i)) ){
                stack.pop();
                continue;
            }
            return false;
        }
            
        }
        return true;
    }
     
	public static void main(String[] args) {
		System.out.println("Hello World");
		
		String expr = "{{" ;
		String result;
		
		System.out.println(result = checkBalanced(expr) ? "Balanced" : "Not Balanced");
		
	}
}
